/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import { Provider } from '@ethersproject/providers'
import type {
	IAddressRegistry,
	IAddressRegistryInterface,
} from '../IAddressRegistry'

const _abi = [
	{
		inputs: [
			{
				internalType: 'string',
				name: '_key',
				type: 'string',
			},
		],
		name: 'registries',
		outputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'string',
				name: '_key',
				type: 'string',
			},
			{
				internalType: 'address',
				name: '_addr',
				type: 'address',
			},
		],
		name: 'setRegistry',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
]

export class IAddressRegistry__factory {
	static readonly abi = _abi
	static createInterface(): IAddressRegistryInterface {
		return new utils.Interface(_abi) as IAddressRegistryInterface
	}
	static connect(
		address: string,
		signerOrProvider: Signer | Provider
	): IAddressRegistry {
		return new Contract(address, _abi, signerOrProvider) as IAddressRegistry
	}
}
